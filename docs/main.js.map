{"version":3,"sources":["./src/app/components/menu/menu.component.ts","./src/app/components/menu/menu.component.html","./src/app/pages/episodes/episodes.component.html","./src/app/pages/episodes/episodes.component.ts","./src/environments/environment.ts","./src/app/services/location/location.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/character/character.service.ts","./src/app/app.module.ts","./src/app/pages/locations/locations.component.html","./src/app/pages/locations/locations.component.ts","./src/app/app-routing.module.ts","./src/app/pages/characters/characters.component.html","./src/app/pages/characters/characters.component.ts","./src/app/services/episode/episode.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <span>Rick And Morty SPA with Angular</span>\n    <span class=\"example-spacer\"></span>\n    <div class=\"example-button-row\">\n        <a math-button routerLink=\"/characters\" routerLinkActive=\"active\" class=\"sepatared-buttons\">Characters</a>\n        <a math-button routerLink=\"/episodes\" routerLinkActive=\"active\" class=\"sepatared-buttons\">Episodes</a>\n        <a math-button routerLink=\"/locations\" routerLinkActive=\"active\" class=\"sepatared-buttons\">Location</a>\n    </div>\n\n</mat-toolbar>","<mat-grid-list cols=\"5\">\n    <mat-grid-tile *ngFor=\"let item of espisodes\">\n        <mat-card class=\"example-card\" [class.mat-elevation-z15]=true>\n            <mat-card-header>\n                <mat-card-title>{{item.name}}</mat-card-title>\n                <mat-card-subtitle>{{item.episode}}</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <mat-card-subtitle>Air date: {{item.air_date}}</mat-card-subtitle>\n                <mat-card-subtitle>Created date: {{item.created}}</mat-card-subtitle>\n            </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n</mat-grid-list>","import { Component, OnInit } from '@angular/core';\n\nimport { EpisodeService } from './../../services/episode/episode.service';\n\n@Component({\n  selector: 'app-episodes',\n  templateUrl: './episodes.component.html',\n  styleUrls: ['./episodes.component.scss']\n})\nexport class EpisodesComponent implements OnInit {\n\n  constructor( private episodeService: EpisodeService) { }\n\n  espisodes: any = {};\n\n  ngOnInit(): void {\n    this.episodeService.getAllEpisodes().subscribe(resp => {\n      this.espisodes = resp.results;\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  private API_LOCATIONS = \"https://rickandmortyapi.com/api/location\";\n\n  constructor(private http: HttpClient) { }\n\n  public getAllLocations(): Observable<any> {\n    return this.http.get(this.API_LOCATIONS);\n  }\n}\n","import { Component } from '@angular/core';\nimport { MenuComponent} from './components/menu/menu.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'rick-and-morty-spa-angular';\n}\n","<app-menu></app-menu>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n\n  private API_CHARACTERS = \"https://rickandmortyapi.com/api/character\";\n\n  constructor(private http: HttpClient) { }\n\n  public getAllCharacters(): Observable<any> {\n    return this.http.get(this.API_CHARACTERS);\n  }\n\n  public getNexCharactersPage(page: number): Observable<any> {\n    return this.http.get(this.API_CHARACTERS+\"?page=\"+page);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n//angular material components\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n\n\n\n//pages components\nimport { CharactersComponent } from './pages/characters/characters.component';\nimport { LocationsComponent } from './pages/locations/locations.component';\nimport { EpisodesComponent } from './pages/episodes/episodes.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    CharactersComponent,\n    LocationsComponent,\n    EpisodesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    MatGridListModule,\n    MatCardModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<mat-grid-list cols=\"5\">\n    <mat-grid-tile *ngFor=\"let item of locations\">\n        <mat-card class=\"example-card\" [class.mat-elevation-z15]=true>\n            <mat-card-header>\n                <div mat-card-avatar></div>\n                <mat-card-title>{{item.name}}</mat-card-title>\n                <mat-card-subtitle>{{item.type}}</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <mat-card-subtitle>Dimensions: {{item.dimension}}</mat-card-subtitle>\n                <mat-card-subtitle>Created date: {{item.created}}</mat-card-subtitle>\n            </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n</mat-grid-list>","import { Component, OnInit } from '@angular/core';\n\nimport { LocationService } from '../../services/location/location.service'\n\n@Component({\n  selector: 'app-locations',\n  templateUrl: './locations.component.html',\n  styleUrls: ['./locations.component.scss']\n})\nexport class LocationsComponent implements OnInit {\n\n  constructor(private locationService: LocationService) { }\n\n  locations: any = {};\n\n  ngOnInit(): void {\n    this.locationService.getAllLocations().subscribe(resp => {\n      this.locations = resp.results;\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { CharactersComponent} from './pages/characters/characters.component';\nimport { EpisodesComponent } from './pages/episodes/episodes.component';\nimport { LocationsComponent} from './pages/locations/locations.component';\n\nconst routes: Routes = [\n  {path: '', component: CharactersComponent},\n  {path: 'characters', component: CharactersComponent},\n  {path: 'episodes', component: EpisodesComponent},\n  {path: 'locations', component: LocationsComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<mat-grid-list cols=\"3\">\n    <mat-grid-tile *ngFor=\"let item of characters\">\n        <mat-card class=\"example-card\" [class.mat-elevation-z15]=true>\n            <mat-card-header>\n                <div mat-card-avatar></div>\n                <mat-card-title>{{item.name}}</mat-card-title>\n                <mat-card-subtitle>{{item.species}}</mat-card-subtitle>\n            </mat-card-header>\n            <img mat-card-image src={{item.image}} alt={{item.name}} class=\"responsive\">\n        </mat-card>\n    </mat-grid-tile>\n</mat-grid-list>\n<div class=\"loadButton\" *ngIf=\"showLoading\">\n    <mat-spinner></mat-spinner>\n</div>\n<div class=\"loadButton\" *ngIf=\"!showLoading\">\n    <button mat-raised-button (click)=\"loadNextPage()\">Cargar más personajes <mat-icon>plus_one</mat-icon></button>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { CharacterService } from './../../services/character/character.service';\n\n@Component({\n  selector: 'app-characters',\n  templateUrl: './characters.component.html',\n  styleUrls: ['./characters.component.scss']\n})\nexport class CharactersComponent implements OnInit {\n\n  constructor(private characterService : CharacterService) { }\n\n  characters:any = [];\n  actualPage:number = 1;\n  infoPages:any = {};\n  showLoading:boolean = false;\n\n  ngOnInit(): void {\n    this.showLoading = true;\n    this.characterService.getAllCharacters().subscribe(resp => {\n      this.characters = resp.results;\n      this.infoPages = resp.info;\n      this.showLoading = false;\n    });\n  }\n\n  loadNextPage() {\n    this.showLoading = true;\n    this.actualPage = this.actualPage +1;\n    if (this.actualPage <= this.infoPages.pages){\n      this.characterService.getNexCharactersPage(this.actualPage).subscribe(resp => {\n        this.characters.push(...resp.results);\n        this.infoPages = resp.info;\n        this.showLoading = false;\n      });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EpisodeService {\n\n  private API_EPISODES = \"https://rickandmortyapi.com/api/episode\";\n\n  constructor(private http: HttpClient) { }\n\n  public getAllEpisodes(): Observable<any> {\n    return this.http.get(this.API_EPISODES);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}